//This program takes the files generated by prime_generator and compresses the contents down to files of 1,000,000 primes keeping only every 1,000th .
#include <fstream>
#include <iostream>
#include <string>
#include <sstream>
#include <algorithm>
#include <stdio.h>

using namespace std;

int main()
{
	string *prime_list;
	prime_list = new string[4000000];
	ifstream file("info.txt");
	string *info;
	info = new string[2];
	if(file.is_open())
	{
		for(int i = 0; i < 2; ++i)
		{
			file >> info[i];
		}
	}
	file.close();
	string past_prime = info[0];
	double p = atof(past_prime.c_str());
	int past_file_number = atoi(info[1].c_str());
	delete[] info;
	int first_file_number = (p / 100000000) + 1;
	cout << "Start = ";
	cout << first_file_number << endl;
	cout << "Which file would you like to end on?" << endl;
	int last_file_number;
	cin >> last_file_number;
	string input_name = to_string(first_file_number) + ".txt";
	input_name = "b" + input_name;
	ifstream input(input_name);
	if(input.is_open())
	{
		for(int i = 0; i < 4000000; ++i)
		{
			input >> prime_list[i];
		}
	}
	input.close();
	int index = 0;
	int start = 0;
	while(index < 4000000 && prime_list[index] != "")
	{
		if(past_prime == prime_list[index])
		{
			start = index;
		}
		index++;
	}
	index--;
	int next = start + 1000;
	int new_file_number = past_file_number + 1;
	ofstream output;
	string file_name = to_string(new_file_number) + ".txt";
	file_name = "primes" + file_name;
	output.open(file_name);
	stringstream ss;
	int counter = 0;
	string prime_to_save = "";
	while(first_file_number < last_file_number)
	{
		while(next <= index)
		{
			ss << prime_list[next] + " ";
			counter++;
			if(counter == 1000)
			{
				prime_to_save = prime_list[next];
				counter = 0;
				output << ss.str();
				output.close();
				new_file_number++;
				file_name = to_string(new_file_number) + ".txt";
				file_name = "primes" + file_name;
				output.open(file_name);
				ss.str(string());//Clears the contents of the string stream.
			}
			next = next + 1000;
		} 
		next = (next - index) - 1;
		cout << "new next " << next << endl;
		first_file_number++;
		if(first_file_number < last_file_number)
		{
			remove(input_name.c_str());
		}
		input_name = to_string(first_file_number) + ".txt";
		input_name = "b" + input_name;
		ifstream input(input_name);
		int l = 0;
		while(l < 4000000)
		{
			prime_list[l] = "";
			l++;
		}
		if(input.is_open())
		{
			for(int i = 0; i < 4000000; ++i)
			{
				input >> prime_list[i];
			}
		}
		input.close();
		index = 0;
		while(index < 4000000 && prime_list[index] != "")
		{
			index++;
		}
		index--;
	}
	ofstream out;
	out.open("info.txt");
	out << prime_to_save << " " << new_file_number - 1;
	out.close();
	delete[] prime_list;
	return 0;
	
}